#include <iostream>
#include <vector>
using namespace std;

int N, M;
int map[1010][1010];
int maxSum = 0;
int dp[1010][1010];

int main(void) {
    cin >> N >> M;

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cin >> map[i][j];
        }
    }

    dp[0][0] = map[0][0];
    for (int i = 0; i < N; i++) {
        if(i%2 == 1){
            
        }
        for (int j = 0; j < M; j++) {
            int nextR, nextD;
            nextR = j + 1;

            if (0 <= nextR && nextR < M) {
                if (dp[i][nextR] < dp[i][j] + map[i][nextR]) {
                    dp[i][nextR] = dp[i][j] + map[i][nextR];
                }
            }
        }
        for (int j = M - 1; j >= 0; j--) {
            int nextL = j - 1;
            if (0 <= nextL && nextL < M) {
                if (dp[i][nextL] < dp[i][j] + map[i][nextL]) {
                    dp[i][nextL] = dp[i][j] + map[i][nextL];
                }
            }
        }
        for (int j = 0; j < M; j++) {
            int nextD = i + 1;

            if (0 <= nextD && nextD < N) {
                if (dp[nextD][j] < dp[i][j] + map[nextD][j]) {
                    dp[nextD][j] = dp[i][j] + map[nextD][j];
                }
            }
        }
    }

    for(int i=0; i<N; i++){
        for(int j=0; j<M; j++){

        }
    }
    return 0;
}